From ff85c22b640f2b6375d346fa5a23d1453d1e23e3 Mon Sep 17 00:00:00 2001
From: 4m1g0 <casadelblanco@gmail.com>
Date: Sat, 7 Jan 2012 00:33:00 +0100
Subject: [PATCH 06/22] Mute-Log

---
 null                                               |    5 +-
 sql/own/auth_mutehistory.sql                       |   11 ++++
 sql/own/world_mutehistory.sql                      |    3 +
 src/server/authserver/Server/AuthSocket.cpp        |    2 +
 src/server/game/Chat/Commands/Level2.cpp           |    5 ++
 src/server/game/Chat/Commands/Level3.cpp           |   49 ++++++++++++++------
 src/server/game/Miscellaneous/Language.h           |    3 +
 src/server/game/World/World.cpp                    |   30 ++++++++++++-
 src/server/game/World/World.h                      |    2 +
 .../Database/Implementation/LoginDatabase.cpp      |    3 +
 .../shared/Database/Implementation/LoginDatabase.h |    3 +
 11 files changed, 98 insertions(+), 18 deletions(-)
 create mode 100644 sql/own/auth_mutehistory.sql
 create mode 100644 sql/own/world_mutehistory.sql

diff --git a/null b/null
index 1f3f3cd..4a544c4 100644
--- a/null
+++ b/null
@@ -1,2 +1,3 @@
-[master 343e8c8] Online-Count
- 2 files changed, 4 insertions(+), 5 deletions(-)
+[master f5f9439] Mute-Announce
+ 3 files changed, 5 insertions(+), 4 deletions(-)
+ create mode 100644 sql/own/0005-GMAnnounceMute.sql
diff --git a/sql/own/auth_mutehistory.sql b/sql/own/auth_mutehistory.sql
new file mode 100644
index 0000000..e928532
--- /dev/null
+++ b/sql/own/auth_mutehistory.sql
@@ -0,0 +1,11 @@
+DROP TABLE IF EXISTS `account_muted`;
+
+CREATE TABLE `account_muted` (
+  `id` int(11) NOT NULL DEFAULT '0' COMMENT 'Account id',
+  `mutedate` bigint(40) NOT NULL DEFAULT '0',
+  `unmutedate` bigint(40) NOT NULL DEFAULT '0',
+  `mutedby` varchar(50) NOT NULL,
+  `mutereason` varchar(255) NOT NULL,
+  `active` tinyint(4) NOT NULL DEFAULT '1',
+  PRIMARY KEY (`id`,`mutedate`)
+) ENGINE=MyISAM DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='Mute List';
diff --git a/sql/own/world_mutehistory.sql b/sql/own/world_mutehistory.sql
new file mode 100644
index 0000000..3e3d720
--- /dev/null
+++ b/sql/own/world_mutehistory.sql
@@ -0,0 +1,3 @@
+INSERT INTO trinity_string (entry, content_default, content_loc6) VALUES(90001, 'Account %s has never been muted', 'La cuenta %s nunca ha sido muteada');
+INSERT INTO trinity_string (entry, content_default, content_loc6) VALUES(90002, 'Mute history for account %s:', 'Historial de mute para la cuenta %s:');
+INSERT INTO trinity_string (entry, content_default, content_loc6) VALUES(90003, 'Mute Date: %s Mutetime: %s Still active: %s  Reason: %s Set by: %s', 'Fecha de muteo: %s Tiempo: %s AÃºn activo: %s  Motivo: %s Puesto por: %s');
diff --git a/src/server/authserver/Server/AuthSocket.cpp b/src/server/authserver/Server/AuthSocket.cpp
index 1f85cb6..c4a6abb 100755
--- a/src/server/authserver/Server/AuthSocket.cpp
+++ b/src/server/authserver/Server/AuthSocket.cpp
@@ -394,6 +394,8 @@ bool AuthSocket::_HandleLogonChallenge()
             {
                 //set expired bans to inactive
                 LoginDatabase.Execute(LoginDatabase.GetPreparedStatement(LOGIN_UPD_EXPIRED_ACCOUNT_BANS));
+                //set expired mutes to inactive
++                LoginDatabase.Execute(LoginDatabase.GetPreparedStatement(LOGIN_SET_EXPIREDACCMUTES));
 
                 // If the account is banned, reject the logon attempt
                 stmt = LoginDatabase.GetPreparedStatement(LOGIN_SEL_ACCOUNT_BANNED);
diff --git a/src/server/game/Chat/Commands/Level2.cpp b/src/server/game/Chat/Commands/Level2.cpp
index 4daa057..bb914f7 100755
--- a/src/server/game/Chat/Commands/Level2.cpp
+++ b/src/server/game/Chat/Commands/Level2.cpp
@@ -127,6 +127,8 @@ bool ChatHandler::HandleUnmuteCommand(const char* args)
     if (HasLowerSecurity (target, target_guid, true))
         return false;
 
+    sWorld->MuteAccount(account_id, notspeaktime*60, mutereasonstr.c_str(), m_session ? m_session->GetPlayerName() : "");
+
     if (target)
     {
         if (target->CanSpeak())
@@ -146,6 +148,9 @@ bool ChatHandler::HandleUnmuteCommand(const char* args)
 
     LoginDatabase.Execute(stmt);
 
+
+    sWorld->RemoveMuteAccount(account_id);
+
     if (target)
         ChatHandler(target).PSendSysMessage(LANG_YOUR_CHAT_ENABLED);
 
diff --git a/src/server/game/Chat/Commands/Level3.cpp b/src/server/game/Chat/Commands/Level3.cpp
index d23a429..f3ff3a2 100755
--- a/src/server/game/Chat/Commands/Level3.cpp
+++ b/src/server/game/Chat/Commands/Level3.cpp
@@ -3157,26 +3157,45 @@ bool ChatHandler::HandleBanInfoCharacterCommand(const char *args)
 bool ChatHandler::HandleBanInfoHelper(uint32 accountid, char const* accountname)
 {
     QueryResult result = LoginDatabase.PQuery("SELECT FROM_UNIXTIME(bandate), unbandate-bandate, active, unbandate, banreason, bannedby FROM account_banned WHERE id = '%u' ORDER BY bandate ASC", accountid);
-    if (!result)
+    if (result)
     {
-        PSendSysMessage(LANG_BANINFO_NOACCOUNTBAN, accountname);
-        return true;
+        PSendSysMessage(LANG_BANINFO_BANHISTORY, accountname);
+        do
+        {
+            Field* fields = result->Fetch();
+
+            time_t unbandate = time_t(fields[3].GetUInt64());
+            bool active = false;
+            if (fields[2].GetBool() && (fields[1].GetUInt64() == (uint64)0 ||unbandate >= time(NULL)))
+                active = true;
+            bool permanent = (fields[1].GetUInt64() == (uint64)0);
+            std::string bantime = permanent ? GetTrinityString(LANG_BANINFO_INFINITE) : secsToTimeString(fields[1].GetUInt64(), true);
+            PSendSysMessage(LANG_BANINFO_HISTORYENTRY,
+                fields[0].GetCString(), bantime.c_str(), active ? GetTrinityString(LANG_BANINFO_YES) : GetTrinityString(LANG_BANINFO_NO), fields[4].GetCString(), fields[5].GetCString());
+        } while (result->NextRow());
     }
+    else
+        PSendSysMessage(LANG_BANINFO_NOACCOUNTBAN, accountname);
 
-    PSendSysMessage(LANG_BANINFO_BANHISTORY, accountname);
-    do
+    QueryResult result2 = LoginDatabase.PQuery("SELECT FROM_UNIXTIME(mutedate), unmutedate-mutedate, active, unmutedate, mutereason, mutedby FROM account_muted WHERE id = '%u' ORDER BY mutedate ASC", accountid);
+    if (result2)
     {
-        Field* fields = result->Fetch();
+        PSendSysMessage(LANG_BANINFO_MUTEHISTORY, accountname);
+        do
+        {
+            Field* fields = result2->Fetch();
 
-        time_t unbandate = time_t(fields[3].GetUInt64());
-        bool active = false;
-        if (fields[2].GetBool() && (fields[1].GetUInt64() == (uint64)0 ||unbandate >= time(NULL)))
-            active = true;
-        bool permanent = (fields[1].GetUInt64() == (uint64)0);
-        std::string bantime = permanent ? GetTrinityString(LANG_BANINFO_INFINITE) : secsToTimeString(fields[1].GetUInt64(), true);
-        PSendSysMessage(LANG_BANINFO_HISTORYENTRY,
-            fields[0].GetCString(), bantime.c_str(), active ? GetTrinityString(LANG_BANINFO_YES) : GetTrinityString(LANG_BANINFO_NO), fields[4].GetCString(), fields[5].GetCString());
-    } while (result->NextRow());
+            time_t unmutedate = time_t(fields[3].GetUInt64());
+            bool active = false;
+            if (fields[2].GetBool() && (fields[1].GetUInt64() == (uint64)0 ||unmutedate >= time(NULL)))
+                active = true;
+            std::string mutetime = secsToTimeString(fields[1].GetUInt64(), true);
+            PSendSysMessage(LANG_BANINFO_MUTEHISTORYENTRY,
+                fields[0].GetCString(), mutetime.c_str(), active ? GetTrinityString(LANG_BANINFO_YES) : GetTrinityString(LANG_BANINFO_NO), fields[4].GetCString(), fields[5].GetCString());
+        } while (result2->NextRow());
+    }
+    else
+        PSendSysMessage(LANG_BANINFO_NOACCOUNTMUTE, accountname);
 
     return true;
 }
diff --git a/src/server/game/Miscellaneous/Language.h b/src/server/game/Miscellaneous/Language.h
index 66610ad..a7854aa 100755
--- a/src/server/game/Miscellaneous/Language.h
+++ b/src/server/game/Miscellaneous/Language.h
@@ -363,6 +363,9 @@ enum TrinityStrings
     LANG_BANINFO_NOACCOUNTBAN           = 416,
     LANG_BANINFO_BANHISTORY             = 417,
     LANG_BANINFO_HISTORYENTRY           = 418,
+    LANG_BANINFO_NOACCOUNTMUTE          = 90001, //custom
+    LANG_BANINFO_MUTEHISTORY            = 90002,
+    LANG_BANINFO_MUTEHISTORYENTRY       = 90003,
     LANG_BANINFO_INFINITE               = 419,
     LANG_BANINFO_NEVER                  = 420,
     LANG_BANINFO_YES                    = 421,
diff --git a/src/server/game/World/World.cpp b/src/server/game/World/World.cpp
index 3c59075..b29962f 100755
--- a/src/server/game/World/World.cpp
+++ b/src/server/game/World/World.cpp
@@ -2303,10 +2303,11 @@ BanReturn World::BanAccount(BanMode mode, std::string nameOrIP, std::string dura
 
         if (mode != BAN_IP)
         {
+            /* Evitamos que los gms puedan modificar los tiempos de baneo
             // make sure there is only one active ban
             stmt = LoginDatabase.GetPreparedStatement(LOGIN_UPD_ACCOUNT_NOT_BANNED);
             stmt->setUInt32(0, account);
-            trans->Append(stmt);
+            trans->Append(stmt);*/
             // No SQL injection with prepared statements
             stmt = LoginDatabase.GetPreparedStatement(LOGIN_INS_ACCOUNT_BANNED);
             stmt->setUInt32(0, account);
@@ -2426,6 +2427,33 @@ bool World::RemoveBanCharacter(std::string name)
     return true;
 }
 
+/// mute account
+bool World::MuteAccount(uint32 account_id, time_t duration, std::string reason, std::string author)
+{
+    PreparedStatement* stmt = NULL;
+
+    stmt = LoginDatabase.GetPreparedStatement(LOGIN_SET_ACCOUNT_MUTED);
+    stmt->setUInt32(0, account_id);
+    stmt->setUInt32(1, duration);
+    stmt->setString(2, author);
+    stmt->setString(3, reason);
+
+    LoginDatabase.Execute(stmt);
+
+    return true;
+}
+
+/// unmute account
+bool World::RemoveMuteAccount(uint32 account_id)
+{
+    PreparedStatement* stmt = NULL;
+
+    stmt = LoginDatabase.GetPreparedStatement(LOGIN_SET_ACCOUNT_NOT_MUTED);
+    stmt->setUInt32(0, account_id);
+    LoginDatabase.Execute(stmt);
+    return true;
+}
+
 /// Update the game time
 void World::_UpdateGameTime()
 {
diff --git a/src/server/game/World/World.h b/src/server/game/World/World.h
index 0352b3f..7c100e8 100755
--- a/src/server/game/World/World.h
+++ b/src/server/game/World/World.h
@@ -707,6 +707,8 @@ class World
         bool RemoveBanAccount(BanMode mode, std::string nameOrIP);
         BanReturn BanCharacter(std::string name, std::string duration, std::string reason, std::string author);
         bool RemoveBanCharacter(std::string name);
+        bool MuteAccount(uint32 account_id, time_t duration, std::string reason, std::string author);
+        bool RemoveMuteAccount(uint32 account_id);
 
         // for max speed access
         static float GetMaxVisibleDistanceOnContinents()    { return m_MaxVisibleDistanceOnContinents; }
diff --git a/src/server/shared/Database/Implementation/LoginDatabase.cpp b/src/server/shared/Database/Implementation/LoginDatabase.cpp
index 4e25c6e..18c22ad 100755
--- a/src/server/shared/Database/Implementation/LoginDatabase.cpp
+++ b/src/server/shared/Database/Implementation/LoginDatabase.cpp
@@ -44,6 +44,9 @@ void LoginDatabaseConnection::DoPrepareStatements()
     PREPARE_STATEMENT(LOGIN_UPD_ACCOUNT_NOT_BANNED, "UPDATE account_banned SET active = 0 WHERE id = ? AND active != 0", CONNECTION_ASYNC)
     PREPARE_STATEMENT(LOGIN_DEL_REALM_CHARACTERS, "DELETE FROM realmcharacters WHERE acctid = ? AND realmid = ?", CONNECTION_ASYNC)
     PREPARE_STATEMENT(LOGIN_INS_REALM_CHARACTERS, "INSERT INTO realmcharacters (numchars, acctid, realmid) VALUES (?, ?, ?)", CONNECTION_ASYNC)
+    PREPARE_STATEMENT(LOGIN_SET_ACCOUNT_MUTED, "INSERT INTO account_muted VALUES (?, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()+?, ?, ?, 1)", CONNECTION_ASYNC)
+    PREPARE_STATEMENT(LOGIN_SET_ACCOUNT_NOT_MUTED, "UPDATE account_muted SET active = 0 WHERE id = ? AND active != 0", CONNECTION_ASYNC)
+    PREPARE_STATEMENT(LOGIN_SET_EXPIREDACCMUTES, "UPDATE account_muted SET active = 0 WHERE active = 1 AND unmutedate<>mutedate AND unmutedate<=UNIX_TIMESTAMP()", CONNECTION_ASYNC)
     PREPARE_STATEMENT(LOGIN_SEL_SUM_REALM_CHARACTERS, "SELECT SUM(numchars) FROM realmcharacters WHERE acctid = ?", CONNECTION_ASYNC);
     PREPARE_STATEMENT(LOGIN_INS_ACCOUNT, "INSERT INTO account(username, sha_pass_hash, joindate) VALUES(?, ?, NOW())", CONNECTION_ASYNC);
     PREPARE_STATEMENT(LOGIN_INS_REALM_CHARACTERS_INIT, "INSERT INTO realmcharacters (realmid, acctid, numchars) SELECT realmlist.id, account.id, 0 FROM realmlist, account LEFT JOIN realmcharacters ON acctid=account.id WHERE acctid IS NULL", CONNECTION_ASYNC);
diff --git a/src/server/shared/Database/Implementation/LoginDatabase.h b/src/server/shared/Database/Implementation/LoginDatabase.h
index afb1880..124bb13 100755
--- a/src/server/shared/Database/Implementation/LoginDatabase.h
+++ b/src/server/shared/Database/Implementation/LoginDatabase.h
@@ -82,6 +82,9 @@ enum LoginDatabaseStatements
     LOGIN_DEL_ACCOUNT_ACCESS,
     LOGIN_DEL_ACCOUNT_ACCESS_BY_REALM,
     LOGIN_INS_ACCOUNT_ACCESS,
+    LOGIN_SET_ACCOUNT_MUTED,
+    LOGIN_SET_ACCOUNT_NOT_MUTED,
+    LOGIN_SET_EXPIREDACCMUTES,
 
     MAX_LOGINDATABASE_STATEMENTS,
 };
-- 
1.7.5.4

