From 262c55345f8b07b3decb5fc8135651f1baee3bc8 Mon Sep 17 00:00:00 2001
From: 4m1g0 <casadelblanco@gmail.com>
Date: Tue, 31 Jan 2012 18:34:01 +0100
Subject: [PATCH 24/26] Autobroadcast

---
 sql/own/world_Autobroadcast_names.sql |    7 ++++
 src/server/game/World/World.cpp       |   57 +++++++++++++++++++++++++++++---
 src/server/game/World/World.h         |    1 +
 3 files changed, 59 insertions(+), 6 deletions(-)
 create mode 100644 sql/own/world_Autobroadcast_names.sql

diff --git a/sql/own/world_Autobroadcast_names.sql b/sql/own/world_Autobroadcast_names.sql
new file mode 100644
index 0000000..6409baa
--- /dev/null
+++ b/sql/own/world_Autobroadcast_names.sql
@@ -0,0 +1,7 @@
+DROP TABLE IF EXISTS `autobroadcast_names`;
+
+CREATE TABLE `autobroadcast_names` (
+  `id` int(11) NOT NULL AUTO_INCREMENT,
+  `name` varchar(20) NOT NULL,
+  PRIMARY KEY (`id`)
+) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
diff --git a/src/server/game/World/World.cpp b/src/server/game/World/World.cpp
index f841297..934cc6f 100755
--- a/src/server/game/World/World.cpp
+++ b/src/server/game/World/World.cpp
@@ -1858,6 +1858,22 @@ void World::LoadAutobroadcasts()
 
     sLog->outString(">> Loaded %u autobroadcasts definitions in %u ms", count, GetMSTimeDiffToNow(oldMSTime));
     sLog->outString();
+    
+    count = 0;
+    
+    result = WorldDatabase.Query("SELECT name FROM autobroadcast_names");
+    
+    do
+    {
+
+        Field* fields = result->Fetch();
+        std::string name = fields[0].GetString();
+
+        m_Autobroadcasts_names.push_back(name);
+
+        ++count;
+    } while (result->NextRow());
+    
 }
 
 /// Update the World !
@@ -2624,17 +2640,46 @@ void World::ProcessCliCommands()
 
 void World::SendAutoBroadcast()
 {
-    if (m_Autobroadcasts.empty())
+    if (m_Autobroadcasts.empty() || m_Autobroadcasts_names.empty())
         return;
-
+        
     std::string msg;
-
+    std::string name;
+    
     msg = SelectRandomContainerElement(m_Autobroadcasts);
-
+    name = SelectRandomContainerElement(m_Autobroadcasts_names);
+    
+    uint32 guid = sObjectMgr->GetPlayerGUIDByName(name);
+    uint64 pl_account = sObjectMgr->GetPlayerAccountIdByGUID(guid);
+    char* secLevel;
+    
+    switch(AccountMgr::GetSecurity(pl_account)) {
+       case SEC_MODERATOR:
+         secLevel = "Mod";
+         break;
+       case SEC_GAMEMASTER:
+         secLevel = "GM";
+         break;
+       case SEC_DIRGM:
+         secLevel = "Dir. GM";
+         break;
+       case SEC_SUBADMIN:
+         secLevel = "Sub. Admin";
+         break;
+       case SEC_COADMIN:
+         secLevel = "Administrador";
+         break;
+       case SEC_ADMINISTRATOR:
+         secLevel = "Administrador";
+         break;
+       default:
+         return;
+     }
+    
     uint32 abcenter = sWorld->getIntConfig(CONFIG_AUTOBROADCAST_CENTER);
 
     if (abcenter == 0)
-        sWorld->SendWorldText(LANG_AUTO_BROADCAST, msg.c_str());
+        sWorld->SendWorldText(LANG_SYSTEMMESSAGE, secLevel, name.c_str(), msg.c_str());
 
     else if (abcenter == 1)
     {
@@ -2645,7 +2690,7 @@ void World::SendAutoBroadcast()
 
     else if (abcenter == 2)
     {
-        sWorld->SendWorldText(LANG_AUTO_BROADCAST, msg.c_str());
+        sWorld->SendWorldText(LANG_SYSTEMMESSAGE, secLevel, name.c_str(), msg.c_str());
 
         WorldPacket data(SMSG_NOTIFICATION, (msg.size()+1));
         data << msg;
diff --git a/src/server/game/World/World.h b/src/server/game/World/World.h
index e514620..16180aa 100755
--- a/src/server/game/World/World.h
+++ b/src/server/game/World/World.h
@@ -840,6 +840,7 @@ class World
         std::string m_DBVersion;
 
         std::list<std::string> m_Autobroadcasts;
+        std::list<std::string> m_Autobroadcasts_names;
 
         std::map<uint32, CharacterNameData> _characterNameDataMap;
         void LoadCharacterNameData();
-- 
1.7.5.4

