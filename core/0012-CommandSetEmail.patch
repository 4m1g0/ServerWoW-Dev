From 9ded356d9a10e963a115dfdc7a83d55bd6144c8d Mon Sep 17 00:00:00 2001
From: tuamigo <tuamigo@tuamigo-System-Product-Name.(none)>
Date: Wed, 12 Oct 2011 23:05:33 +0200
Subject: [PATCH] chageemail

---
 sql/own/characters_LogSystem.sql           |   19 +++++++++
 sql/own/world_LogSystem.sql                |    3 +
 src/server/game/Accounts/AccountMgr.cpp    |   34 ++++++++++++++++
 src/server/game/Accounts/AccountMgr.h      |    5 ++-
 src/server/game/Miscellaneous/Language.h   |    3 +
 src/server/scripts/Commands/cs_account.cpp |   58 ++++++++++++++++++++++++++++
 6 files changed, 121 insertions(+), 1 deletions(-)
 create mode 100644 sql/own/characters_LogSystem.sql
 create mode 100644 sql/own/world_LogSystem.sql

diff --git a/sql/own/characters_LogSystem.sql b/sql/own/characters_LogSystem.sql
new file mode 100644
index 0000000..940c450
--- /dev/null
+++ b/sql/own/characters_LogSystem.sql
@@ -0,0 +1,19 @@
+CREATE TABLE `logs` (
+  `entry` int(20) NOT NULL auto_increment,
+  `accid` int(11) unsigned NOT NULL,
+  `type` tinyint(3) unsigned NOT NULL DEFAULT '0',
+  `time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
+  `param1` int(10) unsigned NOT NULL DEFAULT '0',
+  `param2` int(10) unsigned NOT NULL DEFAULT '0',
+  `param3` int(10) unsigned NOT NULL DEFAULT '0',
+  `param4` int(10) unsigned NOT NULL DEFAULT '0',
+  `param5` int(10) unsigned NOT NULL DEFAULT '0',
+  `param6` int(10) unsigned NOT NULL DEFAULT '0',
+  `param7` int(10) unsigned NOT NULL DEFAULT '0',
+  `text_param1` text,
+  `text_param2` text,
+  `text_param3` text,
+  `text_param4` text,
+  `comment` text NOT NULL COMMENT 'Log Comment',
+  PRIMARY KEY (`entry`)
+) ENGINE=MyISAM DEFAULT CHARSET=utf8 ROW_FORMAT=FIXED;
diff --git a/sql/own/world_LogSystem.sql b/sql/own/world_LogSystem.sql
new file mode 100644
index 0000000..d7d1542
--- /dev/null
+++ b/sql/own/world_LogSystem.sql
@@ -0,0 +1,3 @@
+INSERT INTO trinity_string (entry, content_default, content_loc6) VALUES(90006, 'Email not changed (unknown error)!', '¡El correo no ha sido modificado (error desconocido)!');
+INSERT INTO trinity_string (entry, content_default, content_loc6) VALUES(90004, 'The email was changed', 'El correo ha sido modificado');
+INSERT INTO trinity_string (entry, content_default, content_loc6) VALUES(90005, 'The email can\'t be longer than 60 characters (security limit), email not changed!', '¡El correo no puede tener mas de 60 caracteres (limite de seguridad), el correo no fue modificado!');
diff --git a/src/server/game/Accounts/AccountMgr.cpp b/src/server/game/Accounts/AccountMgr.cpp
index ebe9a9a..e685934 100755
--- a/src/server/game/Accounts/AccountMgr.cpp
+++ b/src/server/game/Accounts/AccountMgr.cpp
@@ -133,6 +133,40 @@ AccountOpResult ChangePassword(uint32 accountId, std::string newPassword)
     return AOR_OK;
 }
 
+AccountOpResult ChangeEmail(uint32 accid, std::string new_email)
+{
+    std::string username;
+    std::string old_email;
+
+    LoginDatabase.EscapeString (new_email);
+
+    QueryResult result = LoginDatabase.PQuery ("SELECT 1 FROM account WHERE email = '%s'", new_email.c_str ());
+
+    if (result)
+        return AOR_EMAIL_ALREDY_EXIST;  // email is in use
+
+    if (!GetName(accid, username))
+        return AOR_NAME_NOT_EXIST;                          // account doesn't exist
+
+    if (utf8length(new_email) > 60)
+        return AOR_EMAIL_TOO_LONG;
+
+    result = LoginDatabase.PQuery ("SELECT email FROM account WHERE id = '%d'", accid);
+
+    old_email = (result) ? (*result)[0].GetString() : "<error>";
+
+    normalizeString(username);
+    normalizeString(new_email); 
+
+    CharacterDatabase.PExecute("INSERT INTO logs (accid, type, param1, text_param1, text_param2) VALUES ('%d', '1', '0', '%s', '%s')", accid, old_email.c_str(), new_email.c_str());
+
+    // also reset s and v to force update at next realmd login
+    LoginDatabase.PExecute("UPDATE account SET v='0', s='0', email='%s' WHERE id='%d'",
+                new_email.c_str(), accid);
+
+    return AOR_OK;
+}
+
 uint32 GetId(std::string username)
 {
     LoginDatabase.EscapeString(username);
diff --git a/src/server/game/Accounts/AccountMgr.h b/src/server/game/Accounts/AccountMgr.h
index aca24e9..d13c194 100755
--- a/src/server/game/Accounts/AccountMgr.h
+++ b/src/server/game/Accounts/AccountMgr.h
@@ -29,7 +29,9 @@ enum AccountOpResult
     AOR_PASS_TOO_LONG,
     AOR_NAME_ALREDY_EXIST,
     AOR_NAME_NOT_EXIST,
-    AOR_DB_INTERNAL_ERROR
+    AOR_DB_INTERNAL_ERROR,
+    AOR_EMAIL_TOO_LONG,
+    AOR_EMAIL_ALREDY_EXIST
 };
 
 #define MAX_ACCOUNT_STR 16
@@ -40,6 +42,7 @@ namespace AccountMgr
         AccountOpResult DeleteAccount(uint32 accountId);
         AccountOpResult ChangeUsername(uint32 accountId, std::string newUsername, std::string newPassword);
         AccountOpResult ChangePassword(uint32 accountId, std::string newPassword);
+        AccountOpResult ChangeEmail(uint32 accid, std::string new_email);
         bool CheckPassword(uint32 accountId, std::string password);
 
         uint32 GetId(std::string username);
diff --git a/src/server/game/Miscellaneous/Language.h b/src/server/game/Miscellaneous/Language.h
index ce6d66c..7fc3531 100755
--- a/src/server/game/Miscellaneous/Language.h
+++ b/src/server/game/Miscellaneous/Language.h
@@ -53,6 +53,9 @@ enum TrinityStrings
     LANG_COMMAND_WRONGOLDPASSWORD       = 27,
     LANG_COMMAND_ACCLOCKLOCKED          = 28,
     LANG_COMMAND_ACCLOCKUNLOCKED        = 29,
+    LANG_COMMAND_EMAIL                  = 90004, //custom
+    LANG_EMAIL_TOO_LONG                 = 90005,
+    LANG_COMMAND_NOTCHANGEEMAIL         = 90006,
     LANG_SPELL_RANK                     = 30,
     LANG_KNOWN                          = 31,
     LANG_LEARN                          = 32,
diff --git a/src/server/scripts/Commands/cs_account.cpp b/src/server/scripts/Commands/cs_account.cpp
index 1b3454e..413ceda 100644
--- a/src/server/scripts/Commands/cs_account.cpp
+++ b/src/server/scripts/Commands/cs_account.cpp
@@ -38,6 +38,7 @@ public:
             { "addon",          SEC_ADMINISTRATOR,  true,  &HandleAccountSetAddonCommand,     "", NULL },
             { "gmlevel",        SEC_CONSOLE,        true,  &HandleAccountSetGmLevelCommand,   "", NULL },
             { "password",       SEC_CONSOLE,        true,  &HandleAccountSetPasswordCommand,  "", NULL },
+            { "email",          SEC_CONSOLE,        true,  &HandleAccountSetEmailCommand,     "", NULL },
             { NULL,             0,                  false, NULL,                              "", NULL }
         };
         static ChatCommand accountCommandTable[] =
@@ -545,6 +546,63 @@ public:
         }
         return true;
     }
+
+    /// Set email for account
+    static bool HandleAccountSetEmailCommand(ChatHandler* handler, const char *args)
+    {
+        if (!*args)
+            return false;
+
+        ///- Get the command line arguments
+        char *szAccount = strtok ((char*)args, " ");
+        char *szEmail =  strtok (NULL, " ");
+
+        if (!szAccount||!szEmail)
+            return false;
+
+        std::string account_name = szAccount;
+        if (!AccountMgr::normalizeString(account_name))
+        {
+            handler->PSendSysMessage(LANG_ACCOUNT_NOT_EXIST, account_name.c_str());
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+
+        uint32 targetAccountId = AccountMgr::GetId(account_name);
+        if (!targetAccountId)
+        {
+            handler->PSendSysMessage(LANG_ACCOUNT_NOT_EXIST, account_name.c_str());
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+
+        /// can set email only for target with less security
+        /// This is also reject self apply in fact
+        if (handler->HasLowerSecurityAccount (NULL, targetAccountId, true))
+            return false;
+
+        AccountOpResult result = AccountMgr::ChangeEmail(targetAccountId, szEmail);
+
+        switch (result)
+        {
+        case AOR_OK:
+            handler->SendSysMessage(LANG_COMMAND_EMAIL);
+            break;
+        case AOR_NAME_NOT_EXIST:
+            handler->PSendSysMessage(LANG_ACCOUNT_NOT_EXIST, account_name.c_str());
+            handler->SetSentErrorMessage(true);
+            return false;
+        case AOR_EMAIL_TOO_LONG:
+            handler->SendSysMessage(LANG_EMAIL_TOO_LONG);
+            handler->SetSentErrorMessage(true);
+            return false;
+        default:
+            handler->SendSysMessage(LANG_COMMAND_NOTCHANGEEMAIL);
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+        return true;
+    }
 };
 
 void AddSC_account_commandscript()
-- 
1.7.4.1

